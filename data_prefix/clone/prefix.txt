{"func": "    protected Document SendRequest(Document request) throws WsmanException {\n        HttpURLConnection conn = null;\n        Document response = null;\n        stampRequest(request);\n        boolean printDebug = System.getProperty(\"intel.management.wsman.debug\", \"false\").equals(\"true\");\n        int retry = 2;\n        while (retry > 0) {\n            try {\n                if (conn != null) {\n                    conn.disconnect();\n                }\n                URL url = new URL((String) properties.get(\"Address\"));\n                Proxy proxy = (Proxy) properties.get(\"HttpProxy\");\n                if (proxy != null) conn = (HttpURLConnection) url.openConnection(proxy); else conn = (HttpURLConnection) url.openConnection();\n                if (conn instanceof HttpsURLConnection) {\n                    HttpsURLConnection sslConn = (HttpsURLConnection) conn;\n                    SSLSocketFactory factory = (SSLSocketFactory) properties.get(\"SSLSocketFactory\");\n                    X509TrustManager tm = (X509TrustManager) properties.get(\"X509TrustManager\");\n                    HostnameVerifier verifier = (HostnameVerifier) properties.get(\"HostnameVerifier\");\n                    X509KeyManager km = (X509KeyManager) properties.get(\"X509KeyManager\");\n                    if (factory == null && (km != null || tm != null)) {\n                        X509KeyManager[] keys = null;\n                        X509TrustManager[] trusts = null;\n                        SSLContext sc = SSLContext.getInstance(\"SSL\");\n                        if (km != null) {\n                            keys = new X509KeyManager[1];\n                            keys[0] = km;\n                        }\n                        if (tm != null) {\n                            trusts = new X509TrustManager[1];\n                            trusts[0] = tm;\n                        }\n                        sc.init(keys, trusts, null);\n                        factory = sc.getSocketFactory();\n                        properties.put(\"SSLSocketFactory\", factory);\n                    }\n                    if (factory != null) sslConn.setSSLSocketFactory(factory);\n                    if (verifier != null) sslConn.setHostnameVerifier(verifier);\n                }\n                Object auth = properties.get(\"AuthScheme\");\n                if (auth != null && auth.equals(\"kerberos\")) {\n                    Oid spnegoMecOid = new Oid(\"1.3.6.1.5.5.2\");\n                    GSSManager manager = org.ietf.jgss.GSSManager.getInstance();\n                    String spnName = \"HTTP/\" + url.getHost();\n                    int spnPort = url.getPort();\n                    if (spnPort == 16992 || spnPort == 16993 || spnPort == 623 || spnPort == 624) {\n                        spnName = spnName + \":\" + Integer.toString(spnPort);\n                    }\n                    GSSName gssName = manager.createName(spnName, null);\n                    GSSContext context = manager.createContext(gssName, spnegoMecOid, null, GSSCredential.DEFAULT_LIFETIME);\n                    context.requestCredDeleg(true);\n                    byte[] token = new byte[0];\n                    token = context.initSecContext(token, 0, token.length);\n                    String tokenStr = WsmanUtils.getBase64String(token);\n                    conn.addRequestProperty(\"Authorization\", \"Negotiate \" + tokenStr);\n                } else if (auth != null && auth.equals(\"basic\")) {\n                    java.net.Authenticator.requestPasswordAuthentication(url.getHost(), null, url.getPort(), url.getProtocol(), \"\", \"basic\");\n                    String tokenStr = \"\";\n                    conn.addRequestProperty(\"Authorization\", \"Basic \" + tokenStr);\n                }\n                conn.setRequestMethod(\"POST\");\n                conn.addRequestProperty(\"Content-Type\", \"application/soap+xml;charset=UTF-8\");\n                conn.setDoOutput(true);\n                if (printDebug) System.out.println(getXmlLoader().formatDocument(request));\n                getXmlLoader().saveDocument(request, conn.getOutputStream());\n                InputStream s = conn.getInputStream();\n                response = getXmlLoader().loadDocument(s);\n                if (printDebug) {\n                    System.out.println(getXmlLoader().formatDocument(response));\n                }\n                conn.getResponseCode();\n                retry = 0;\n                conn.disconnect();\n                conn = null;\n            } catch (IOException ioException) {\n                retry--;\n                int max = conn.getHeaderFields().size();\n                for (int i = 0; i < max; i++) {\n                    String t = conn.getHeaderField(i);\n                    t.toString();\n                }\n                conn.getRequestProperty(\"Authorization\");\n                conn.getHeaderField(\"Authorization\");\n                Object errObj = getResponse(conn);\n                if (errObj != null && errObj instanceof Document) {\n                    response = (Document) errObj;\n                    retry = 0;\n                    throw new WsmanException(this, response);\n                } else if (errObj != null) throw new WsmanException(ioException);\n                if (retry == 0) throw new WsmanException(ioException);\n            } catch (Exception exception) {\n                retry = 0;\n                throw new WsmanException(exception);\n            }\n        }\n        return response;\n    }\n", "idx": "10231476"}