{"repo": "aws/aws-sdk-php", "path": "src/Glacier/GlacierClient.php", "func_name": "GlacierClient.getChecksumsMiddleware", "original_string": "private function getChecksumsMiddleware()\n    {\n        return function (callable $handler) {\n            return function (\n                CommandInterface $command,\n                RequestInterface $request = null\n            ) use ($handler) {\n                // Accept \"ContentSHA256\" with a lowercase \"c\" to match other Glacier params.\n                if (!$command['ContentSHA256'] && $command['contentSHA256']) {\n                    $command['ContentSHA256'] = $command['contentSHA256'];\n                    unset($command['contentSHA256']);\n                }\n\n                // If uploading, then make sure checksums are added.\n                $name = $command->getName();\n                if (($name === 'UploadArchive' || $name === 'UploadMultipartPart')\n                    && (!$command['checksum'] || !$command['ContentSHA256'])\n                ) {\n                    $body = $request->getBody();\n                    if (!$body->isSeekable()) {\n                        throw new CouldNotCreateChecksumException('sha256');\n                    }\n\n                    // Add a tree hash if not provided.\n                    if (!$command['checksum']) {\n                        $body = new HashingStream(\n                            $body, new TreeHash(),\n                            function ($result) use ($command, &$request) {\n                                $request = $request->withHeader(\n                                    'x-amz-sha256-tree-hash',\n                                    bin2hex($result)\n                                );\n                            }\n                        );\n                    }\n\n                    // Add a linear content hash if not provided.\n                    if (!$command['ContentSHA256']) {\n                        $body = new HashingStream(\n                            $body, new PhpHash('sha256'),\n                            function ($result) use ($command) {\n                                $command['ContentSHA256'] = bin2hex($result);\n                            }\n                        );\n                    }\n\n                    // Read the stream in order to calculate the hashes.\n                    while (!$body->eof()) {\n                        $body->read(1048576);\n                    }\n                    $body->seek(0);\n                }\n\n                // Set the content hash header if a value is in the command.\n                if ($command['ContentSHA256']) {\n                    $request = $request->withHeader(\n                        'x-amz-content-sha256',\n                        $command['ContentSHA256']\n                    );\n                }\n\n                return $handler($command, $request);\n            };\n        };\n    }", "language": "php", "code": "private function getChecksumsMiddleware()\n    {\n        return function (callable $handler) {\n            return function (\n                CommandInterface $command,\n                RequestInterface $request = null\n            ) use ($handler) {\n                // Accept \"ContentSHA256\" with a lowercase \"c\" to match other Glacier params.\n                if (!$command['ContentSHA256'] && $command['contentSHA256']) {\n                    $command['ContentSHA256'] = $command['contentSHA256'];\n                    unset($command['contentSHA256']);\n                }\n\n                // If uploading, then make sure checksums are added.\n                $name = $command->getName();\n                if (($name === 'UploadArchive' || $name === 'UploadMultipartPart')\n                    && (!$command['checksum'] || !$command['ContentSHA256'])\n                ) {\n                    $body = $request->getBody();\n                    if (!$body->isSeekable()) {\n                        throw new CouldNotCreateChecksumException('sha256');\n                    }\n\n                    // Add a tree hash if not provided.\n                    if (!$command['checksum']) {\n                        $body = new HashingStream(\n                            $body, new TreeHash(),\n                            function ($result) use ($command, &$request) {\n                                $request = $request->withHeader(\n                                    'x-amz-sha256-tree-hash',\n                                    bin2hex($result)\n                                );\n                            }\n                        );\n                    }\n\n                    // Add a linear content hash if not provided.\n                    if (!$command['ContentSHA256']) {\n                        $body = new HashingStream(\n                            $body, new PhpHash('sha256'),\n                            function ($result) use ($command) {\n                                $command['ContentSHA256'] = bin2hex($result);\n                            }\n                        );\n                    }\n\n                    // Read the stream in order to calculate the hashes.\n                    while (!$body->eof()) {\n                        $body->read(1048576);\n                    }\n                    $body->seek(0);\n                }\n\n                // Set the content hash header if a value is in the command.\n                if ($command['ContentSHA256']) {\n                    $request = $request->withHeader(\n                        'x-amz-content-sha256',\n                        $command['ContentSHA256']\n                    );\n                }\n\n                return $handler($command, $request);\n            };\n        };\n    }", "code_tokens": ["private", "function", "getChecksumsMiddleware", "(", ")", "{", "return", "function", "(", "callable", "$", "handler", ")", "{", "return", "function", "(", "CommandInterface", "$", "command", ",", "RequestInterface", "$", "request", "=", "null", ")", "use", "(", "$", "handler", ")", "{", "if", "(", "!", "$", "command", "[", "'ContentSHA256'", "]", "&&", "$", "command", "[", "'contentSHA256'", "]", ")", "{", "$", "command", "[", "'ContentSHA256'", "]", "=", "$", "command", "[", "'contentSHA256'", "]", ";", "unset", "(", "$", "command", "[", "'contentSHA256'", "]", ")", ";", "}", "$", "name", "=", "$", "command", "->", "getName", "(", ")", ";", "if", "(", "(", "$", "name", "===", "'UploadArchive'", "||", "$", "name", "===", "'UploadMultipartPart'", ")", "&&", "(", "!", "$", "command", "[", "'checksum'", "]", "||", "!", "$", "command", "[", "'ContentSHA256'", "]", ")", ")", "{", "$", "body", "=", "$", "request", "->", "getBody", "(", ")", ";", "if", "(", "!", "$", "body", "->", "isSeekable", "(", ")", ")", "{", "throw", "new", "CouldNotCreateChecksumException", "(", "'sha256'", ")", ";", "}", "if", "(", "!", "$", "command", "[", "'checksum'", "]", ")", "{", "$", "body", "=", "new", "HashingStream", "(", "$", "body", ",", "new", "TreeHash", "(", ")", ",", "function", "(", "$", "result", ")", "use", "(", "$", "command", ",", "&", "$", "request", ")", "{", "$", "request", "=", "$", "request", "->", "withHeader", "(", "'x-amz-sha256-tree-hash'", ",", "bin2hex", "(", "$", "result", ")", ")", ";", "}", ")", ";", "}", "if", "(", "!", "$", "command", "[", "'ContentSHA256'", "]", ")", "{", "$", "body", "=", "new", "HashingStream", "(", "$", "body", ",", "new", "PhpHash", "(", "'sha256'", ")", ",", "function", "(", "$", "result", ")", "use", "(", "$", "command", ")", "{", "$", "command", "[", "'ContentSHA256'", "]", "=", "bin2hex", "(", "$", "result", ")", ";", "}", ")", ";", "}", "while", "(", "!", "$", "body", "->", "eof", "(", ")", ")", "{", "$", "body", "->", "read", "(", "1048576", ")", ";", "}", "$", "body", "->", "seek", "(", "0", ")", ";", "}", "if", "(", "$", "command", "[", "'ContentSHA256'", "]", ")", "{", "$", "request", "=", "$", "request", "->", "withHeader", "(", "'x-amz-content-sha256'", ",", "$", "command", "[", "'ContentSHA256'", "]", ")", ";", "}", "return", "$", "handler", "(", "$", "command", ",", "$", "request", ")", ";", "}", ";", "}", ";", "}"], "docstring": "Creates a middleware that updates a command with the content and tree\nhash headers for upload operations.\n\n@return callable\n@throws CouldNotCreateChecksumException if the body is not seekable.", "docstring_tokens": ["Creates", "a", "middleware", "that", "updates", "a", "command", "with", "the", "content", "and", "tree", "hash", "headers", "for", "upload", "operations", "."], "sha": "874c1040edab52df3873157aa54ea51833d48c0e", "url": "https://github.com/aws/aws-sdk-php/blob/874c1040edab52df3873157aa54ea51833d48c0e/src/Glacier/GlacierClient.php#L122-L186", "partition": "train"}